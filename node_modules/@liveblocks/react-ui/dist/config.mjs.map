{"version":3,"file":"config.mjs","sources":["../src/config.tsx"],"sourcesContent":["\"use client\";\n\nimport type { PropsWithChildren } from \"react\";\nimport { createContext, useContext, useMemo } from \"react\";\n\nimport { type Components, ComponentsProvider } from \"./components\";\nimport type { Overrides } from \"./overrides\";\nimport { OverridesProvider } from \"./overrides\";\n\ntype LiveblocksUIConfigProps = PropsWithChildren<{\n  /**\n   * Override the components' strings.\n   */\n  overrides?: Partial<Overrides>;\n\n  /**\n   * Override the components' components.\n   */\n  components?: Partial<Components>;\n\n  /**\n   * The container to render the portal into.\n   */\n  portalContainer?: HTMLElement;\n\n  /**\n   * When `preventUnsavedChanges` is set on your Liveblocks client (or set on\n   * <LiveblocksProvider>), then closing a browser tab will be prevented when\n   * there are unsaved changes.\n   *\n   * By default, that will include draft texts or attachments that are (being)\n   * uploaded via comments/threads composers, but not submitted yet.\n   *\n   * If you want to prevent unsaved changes with Liveblocks, but not for\n   * composers, you can opt-out by setting this option to `false`.\n   */\n  preventUnsavedComposerChanges?: boolean;\n}>;\n\ninterface LiveblocksUIConfigContext {\n  portalContainer?: HTMLElement;\n  preventUnsavedComposerChanges?: boolean;\n}\n\nconst LiveblocksUIConfigContext = createContext<LiveblocksUIConfigContext>({});\n\nexport function useLiveblocksUIConfig() {\n  return useContext(LiveblocksUIConfigContext);\n}\n\n/**\n * Set configuration options for all components.\n *\n * @example\n * <LiveblocksUIConfig overrides={{ locale: \"fr\", USER_UNKNOWN: \"Anonyme\", ... }}>\n *   <App />\n * </LiveblocksUIConfig>\n */\nexport function LiveblocksUIConfig({\n  overrides,\n  components,\n  portalContainer,\n  preventUnsavedComposerChanges = true,\n  children,\n}: LiveblocksUIConfigProps) {\n  const liveblocksUIConfig = useMemo(\n    () => ({ portalContainer, preventUnsavedComposerChanges }),\n    [portalContainer, preventUnsavedComposerChanges]\n  );\n\n  return (\n    <LiveblocksUIConfigContext.Provider value={liveblocksUIConfig}>\n      <OverridesProvider overrides={overrides}>\n        <ComponentsProvider components={components}>\n          {children}\n        </ComponentsProvider>\n      </OverridesProvider>\n    </LiveblocksUIConfigContext.Provider>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAAA;AA4CA;AAEO;AACL;AACF;AAUO;AAA4B;AACjC;AACA;AACA;AACgC;AAElC;AACE;AAA2B;AAC+B;AACT;AAGjD;AACG;AAA0C;AACxC;AAAkB;AAChB;AAAmB;AACjB;AACH;AACF;AAGN;;"}