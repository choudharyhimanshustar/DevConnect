"use client";
import { jsx } from 'react/jsx-runtime';
import { createContext, useContext, useMemo } from 'react';
import { ComponentsProvider } from './components.mjs';
import { OverridesProvider } from './overrides.mjs';


const LiveblocksUIConfigContext = createContext({});
function useLiveblocksUIConfig() {
  return useContext(LiveblocksUIConfigContext);
}
function LiveblocksUIConfig({
  overrides,
  components,
  portalContainer,
  preventUnsavedComposerChanges = true,
  children
}) {
  const liveblocksUIConfig = useMemo(
    () => ({ portalContainer, preventUnsavedComposerChanges }),
    [portalContainer, preventUnsavedComposerChanges]
  );
  return /* @__PURE__ */ jsx(LiveblocksUIConfigContext.Provider, {
    value: liveblocksUIConfig,
    children: /* @__PURE__ */ jsx(OverridesProvider, {
      overrides,
      children: /* @__PURE__ */ jsx(ComponentsProvider, {
        components,
        children
      })
    })
  });
}

export { LiveblocksUIConfig, useLiveblocksUIConfig };
//# sourceMappingURL=config.mjs.map
